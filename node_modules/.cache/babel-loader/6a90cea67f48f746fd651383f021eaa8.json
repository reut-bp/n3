{"ast":null,"code":"var _jsxFileName = \"/Users/reutbp/Documents/Hackathon/2019/react-semantic/src/Feed.js\";\nimport React from 'react';\nimport { Feed, Icon } from 'semantic-ui-react';\nimport feed from \"./resources/feed\";\nexport default class FeedComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateDate = date => {\n      let newDate = new Date(date * 1000);\n      let h = newDate.getHours();\n      let min = \"0\" + newDate.getMinutes();\n      let sec = \"0\" + newDate.getSeconds();\n      return h + \":\" + min + \":\" + sec;\n    };\n  }\n\n  render() {\n    return React.createElement(Feed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", feed.map(feed => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Feed.Event, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Feed.Label, {\n        image: \"/images/avatar/small/joe.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Feed.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Feed.Summary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, feed.nickname), \" posted on his page\", React.createElement(Feed.Date, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", this.calculateDate(feed.date))), React.createElement(Feed.Extra, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, feed.text), React.createElement(Feed.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Feed.Like, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"like\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), \"5 Likes\")))));\n    }), React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: \"/images/avatar/small/joe.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Joe Henderson\"), \" posted on his page\", React.createElement(Feed.Date, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"3 days ago\")), React.createElement(Feed.Extra, {\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Ours is a life of constant reruns. We're always circling back to where we'd we started, then starting all over again. Even if we don't run extra laps that day, we surely will come back for more of the same another day soon.\"), React.createElement(Feed.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Feed.Like, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"5 Likes\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/reutbp/Documents/Hackathon/2019/react-semantic/src/Feed.js"],"names":["React","Feed","Icon","feed","FeedComponent","Component","constructor","props","calculateDate","date","newDate","Date","h","getHours","min","getMinutes","sec","getSeconds","render","map","nickname","text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Feed, Icon } from 'semantic-ui-react'\nimport feed from \"./resources/feed\"\n\n\nexport default class FeedComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    calculateDate  = date => {\n    let newDate = new Date(date * 1000);\n    let h= newDate.getHours();\n    let min = \"0\" + newDate.getMinutes();\n    let sec = \"0\" + newDate.getSeconds();\n     return h + \":\" + min + \":\" + sec ;\n    }\n\n  render() {\n\n    return (\n        <Feed> {\n\n            feed.map((feed) => {\n                return (\n                    <div>\n                         <Feed.Event>\n                           <Feed.Label image='/images/avatar/small/joe.jpg' />\n                           <Feed.Content>\n                             <Feed.Summary>\n                              <a>{feed.nickname}</a> posted on his page\n                               <Feed.Date> {this.calculateDate(feed.date)}</Feed.Date>\n                             </Feed.Summary>\n                             <Feed.Extra text>{feed.text}</Feed.Extra>\n                             <Feed.Meta>\n                               <Feed.Like>\n                                 <Icon name='like' />5 Likes\n                               </Feed.Like>\n                             </Feed.Meta>\n                           </Feed.Content>\n                         </Feed.Event>\n                    </div>\n                )\n            }\n            )\n         }\n     <Feed.Event> \n       <Feed.Label image='/images/avatar/small/joe.jpg' />\n       <Feed.Content>\n         <Feed.Summary>\n           <a>Joe Henderson</a> posted on his page\n           <Feed.Date>3 days ago</Feed.Date>\n         </Feed.Summary>\n         <Feed.Extra text>\n           Ours is a life of constant reruns. We're always circling back to where\n           we'd we started, then starting all over again. Even if we don't run\n          extra laps that day, we surely will come back for more of the same\n          another day soon.\n         </Feed.Extra>\n         <Feed.Meta>\n           <Feed.Like>\n             <Icon name='like' />5 Likes\n           </Feed.Like>\n         </Feed.Meta>\n       </Feed.Content>\n     </Feed.Event>\n\n{/*     <Feed.Event> */}\n{/*       <Feed.Label image='/images/avatar/small/justen.jpg' /> */}\n{/*       <Feed.Content> */}\n{/*         <Feed.Summary> */}\n{/*           <a>Justen Kitsune</a> added <a>2 new photos</a> of you */}\n{/*           <Feed.Date>4 days ago</Feed.Date> */}\n{/*         </Feed.Summary> */}\n{/*         <Feed.Extra images> */}\n{/*           <a> */}\n{/*             <img src='https://react.semantic-ui.com/images/wireframe/image.png' /> */}\n{/*           </a> */}\n{/*           <a> */}\n{/*             <img src='https://react.semantic-ui.com/images/wireframe/image.png' /> */}\n{/*           </a> */}\n{/*         </Feed.Extra> */}\n{/*         <Feed.Meta> */}\n{/*           <Feed.Like> */}\n{/*             <Icon name='like' /> */}\n{/*             41 Likes */}\n{/*           </Feed.Like> */}\n{/*         </Feed.Meta> */}\n{/*       </Feed.Content> */}\n{/*     </Feed.Event> */}\n  </Feed>\n)}\n\n}\n\n"]},"metadata":{},"sourceType":"module"}